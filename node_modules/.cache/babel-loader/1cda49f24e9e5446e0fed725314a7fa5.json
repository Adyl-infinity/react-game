{"ast":null,"code":"var _jsxFileName = \"/Users/adyl/Desktop/projects/react-game/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [number, setNumber] = useState(Math.round(Math.random() * 10));\n  const [guess, setGuess] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [freeAttempt, setFreeAttempt] = useState(3);\n  const [computer, setComputer] = useState(0);\n  const [person, setPerson] = useState(0);\n\n  const input = e => {\n    setGuess(e.target.value);\n  };\n\n  const check = () => {\n    if (+guess > 0 && +guess <= 10) {\n      if (number === +guess) {\n        setMessage(\"You win\");\n        setPerson(person + 1);\n      } else if (freeAttempt === 0) {\n        setMessage(\"You lose\");\n        setComputer(computer + 1);\n      } else {\n        setFreeAttempt(freeAttempt - 1);\n      }\n\n      setGuess(\"\");\n    }\n  };\n\n  const reset = () => {\n    setNumber(Math.round(Math.random() * 10));\n    setMessage(\"\");\n    setGuess(\"\");\n    setFreeAttempt(3);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Computer:\", computer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"People:\", person]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess the number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: guess,\n        onChange: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: check,\n          children: \"CHECK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          children: \"RESET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"You have \", freeAttempt, \" attempts left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"xOBwORF8qIRAriwl67WkSRSK39Y=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/adyl/Desktop/projects/react-game/src/Game.js"],"names":["useState","Game","number","setNumber","Math","round","random","guess","setGuess","message","setMessage","freeAttempt","setFreeAttempt","computer","setComputer","person","setPerson","input","e","target","value","check","reset"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAApC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMiB,KAAK,GAAIC,CAAD,IAAM;AAChBV,IAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,KAAK,GAAG,MAAM;AAChB,QAAI,CAACd,KAAD,GAAS,CAAT,IAAc,CAACA,KAAD,IAAU,EAA5B,EAA+B;AAC3B,UAAGL,MAAM,KAAK,CAACK,KAAf,EAAqB;AACjBG,QAAAA,UAAU,CAAC,SAAD,CAAV;AACAM,QAAAA,SAAS,CAACD,MAAM,GAAE,CAAT,CAAT;AACH,OAHD,MAGO,IAAIJ,WAAW,KAAK,CAApB,EAAsB;AACzBD,QAAAA,UAAU,CAAC,UAAD,CAAV;AACAI,QAAAA,WAAW,CAACD,QAAQ,GAAE,CAAX,CAAX;AACH,OAHM,MAGA;AACHD,QAAAA,cAAc,CAACD,WAAW,GAAE,CAAd,CAAd;AACH;;AACDH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAbD;;AAeA,QAAMc,KAAK,GAAG,MAAM;AAChBnB,IAAAA,SAAS,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAT;AACAI,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,cAAc,CAAC,CAAD,CAAd;AACH,GALD;;AAMA,sBACI;AAAA,4BACI;AAAA,8BAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,4BAAYE,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAER,KAA5B;AAAmC,QAAA,QAAQ,EAAEU;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAEI,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAOI;AAAA,gCAAcX,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAlDD;;GAAMR,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import {useState} from \"react\";\n\nconst Game = () => {\n    const [number, setNumber] = useState(Math.round(Math.random() * 10))\n    const [guess, setGuess] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [freeAttempt, setFreeAttempt] = useState(3)\n\n    const [computer, setComputer] = useState(0)\n    const [person, setPerson] = useState(0)\n\n    const input = (e) =>{\n        setGuess(e.target.value)\n    }\n\n    const check = () => {\n        if (+guess > 0 && +guess <= 10){\n            if(number === +guess){\n                setMessage(\"You win\")\n                setPerson(person +1)\n            } else if (freeAttempt === 0){\n                setMessage(\"You lose\")\n                setComputer(computer +1)\n            } else {\n                setFreeAttempt(freeAttempt -1)\n            }\n            setGuess(\"\")\n        }\n    }\n\n    const reset = () => {\n        setNumber(Math.round(Math.random() * 10))\n        setMessage(\"\")\n        setGuess(\"\")\n        setFreeAttempt(3)\n    }\n    return (\n        <div>\n            <h3>Computer:{computer}</h3>\n            <h3>People:{person}</h3>\n            <div className=\"game\">\n                <h1>Guess the number</h1>\n                <input type=\"number\" value={guess} onChange={input}/>\n                <div>\n                    <button className=\"btn\" onClick={check}>CHECK</button>\n                    <button onClick={reset}>RESET</button>\n                </div>\n                <h3>You have {freeAttempt} attempts left</h3>\n                <h4>{message}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}