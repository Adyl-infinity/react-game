{"ast":null,"code":"var _jsxFileName = \"/Users/adyl/Desktop/projects/react-game/src/Game.js\",\n    _s = $RefreshSig$();\n\n// import {useState} from \"react\";\n// const Game = () => {\n//     const [number, setNumber] = useState(Math.round(Math.random() * 10))\n//     const [guess, setGuess] = useState(\"\")\n//     const [message, setMessage] = useState(\"\")\n//     const [freeAttempt, setFreeAttempt] = useState(3)\n//\n//     const [computer, setComputer] = useState(0)\n//     const [person, setPerson] = useState(0)\n// const input = (e) =>{\n//     setGuess(e.target.value)\n// }\n//\n// const check = () => {\n//     if (+guess > 0 && +guess <= 10){\n//         if(number === +guess){\n//             setMessage(\"You win\")\n//             setPerson(person +1)\n//         } else if (freeAttempt === 0){\n//             setMessage(\"You lose\")\n//             setComputer(computer +1)\n//         } else {\n//             setFreeAttempt(freeAttempt -1)\n//         }\n//         setGuess(\"\")\n//     }\n// }\n//     const reset = () => {\n//         setNumber(Math.round(Math.random() * 10))\n//         setMessage(\"\")\n//         setGuess(\"\")\n//         setFreeAttempt(3)\n//     }\n//     return (\n//         <div>\n//             <h3>Computer:{computer}</h3>\n//             <h3>People:{person}</h3>\n//             <div className=\"game\">\n//                 <h1>Угадай число от 0 до 10</h1>\n//                 <input type=\"number\" value={guess} onChange={input}/>\n//                 <div>\n//                     <button className=\"btn\" onClick={check}>CHECK</button>\n//                     <button onClick={reset}>RESET</button>\n//                 </div>\n//                 <h3>У вас осталось {freeAttempt} попытки</h3>\n//                 <h4>{message}</h4>\n//             </div>\n//         </div>\n//     )\n// }\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [random, setRandom] = useState(Math.round(Math.random() * 10));\n  const [guess, setGuess] = useState(\"\");\n  const [freeAttempts, setFreeAttempts] = useState(3);\n  const [message, setMessage] = useState(\"\");\n  const [computer, setComputer] = useState(0);\n  const [person, setPerson] = useState(0);\n  const [isTrue, setIsTrue] = useState(false);\n\n  const handleInput = e => {\n    setGuess(e.target.value);\n  };\n\n  const checkNumber = () => {\n    setFreeAttempts(freeAttempts - 1);\n\n    if (random > +guess) {\n      setMessage(\"Мало\");\n    } else if (random < +guess) {\n      setMessage(\"Много\");\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"comp\", computer);\n    localStorage.setItem(\"person\", person);\n  }, [message]);\n  useEffect(() => {\n    if (random !== +guess && freeAttempts === 0) {\n      setMessage(\"Проиграл\");\n      setIsTrue(true);\n      setPerson(+computer + 1);\n    } else if (random === +guess) {\n      setMessage(\"Выиграл\");\n      setIsTrue(true);\n      setPerson(+person + 1);\n    }\n  }, [freeAttempts]);\n\n  const reset = () => {\n    setRandom(Math.round(Math.random() * 10));\n    setMessage(\"\");\n    setGuess(\"\");\n    setFreeAttempts(3);\n    setIsTrue(false);\n  };\n\n  const clear = () => {\n    localStorage.clear();\n    setPerson(0);\n    setComputer(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Person:\", person]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Computer:\", computer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u0433\\u0430\\u0434\\u0430\\u0439 \\u0447\\u0438\\u0441\\u043B\\u043E \\u043E\\u0442 0 \\u0434\\u043E 10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: handleInput,\n        value: guess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkNumber,\n        disabled: isTrue,\n        className: \"chk-btn\",\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"res-btn\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clear,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), Boolean(freeAttempts) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0423 \\u0432\\u0430\\u0441 \\u043E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \", freeAttempts, \" \", freeAttempts === 1 ? \"попытка\" : \"попытки\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"qf5C7UYB7rcgZbfZfrHgAKJcXqw=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/adyl/Desktop/projects/react-game/src/Game.js"],"names":["useEffect","useState","Game","random","setRandom","Math","round","guess","setGuess","freeAttempts","setFreeAttempts","message","setMessage","computer","setComputer","person","setPerson","isTrue","setIsTrue","handleInput","e","target","value","checkNumber","localStorage","setItem","reset","clear","Boolean"],"mappings":"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","sourcesContent":["// import {useState} from \"react\";\n\n// const Game = () => {\n//     const [number, setNumber] = useState(Math.round(Math.random() * 10))\n//     const [guess, setGuess] = useState(\"\")\n//     const [message, setMessage] = useState(\"\")\n//     const [freeAttempt, setFreeAttempt] = useState(3)\n//\n//     const [computer, setComputer] = useState(0)\n//     const [person, setPerson] = useState(0)\n\n    // const input = (e) =>{\n    //     setGuess(e.target.value)\n    // }\n    //\n    // const check = () => {\n    //     if (+guess > 0 && +guess <= 10){\n    //         if(number === +guess){\n    //             setMessage(\"You win\")\n    //             setPerson(person +1)\n    //         } else if (freeAttempt === 0){\n    //             setMessage(\"You lose\")\n    //             setComputer(computer +1)\n    //         } else {\n    //             setFreeAttempt(freeAttempt -1)\n    //         }\n    //         setGuess(\"\")\n    //     }\n    // }\n\n//     const reset = () => {\n//         setNumber(Math.round(Math.random() * 10))\n//         setMessage(\"\")\n//         setGuess(\"\")\n//         setFreeAttempt(3)\n//     }\n//     return (\n//         <div>\n//             <h3>Computer:{computer}</h3>\n//             <h3>People:{person}</h3>\n//             <div className=\"game\">\n//                 <h1>Угадай число от 0 до 10</h1>\n//                 <input type=\"number\" value={guess} onChange={input}/>\n//                 <div>\n//                     <button className=\"btn\" onClick={check}>CHECK</button>\n//                     <button onClick={reset}>RESET</button>\n//                 </div>\n//                 <h3>У вас осталось {freeAttempt} попытки</h3>\n//                 <h4>{message}</h4>\n//             </div>\n//         </div>\n//     )\n// }\n\n\n\n\n\n\n\n\n\n\nimport {useEffect, useState} from \"react\";\n\nconst Game = () => {\n    const [random, setRandom] = useState(Math.round(Math.random() * 10))\n    const [guess, setGuess] = useState(\"\")\n    const [freeAttempts, setFreeAttempts] = useState(3)\n    const [message, setMessage] = useState(\"\")\n    const [computer, setComputer] = useState(0)\n    const [person, setPerson] = useState(0)\n    const [isTrue, setIsTrue] = useState(false)\n\n    const handleInput = (e) => {\n        setGuess(e.target.value)\n    }\n\n\n\n    const checkNumber = () => {\n        setFreeAttempts(freeAttempts -1)\n        if (random > +guess){\n            setMessage(\"Мало\")\n        } else if (random < +guess){\n            setMessage(\"Много\")\n        } \n    }\n\n    useEffect(() => {\n        localStorage.setItem(\"comp\", computer)\n        localStorage.setItem(\"person\", person)\n    },[message])\n\n    useEffect(() => {\n\n        if (random !== +guess && freeAttempts  === 0) {\n            setMessage(\"Проиграл\")\n            setIsTrue(true)\n            setPerson(+computer + 1)\n        } else  if (random === +guess){\n            setMessage(\"Выиграл\")\n            setIsTrue(true)\n            setPerson(+person + 1)\n        }\n    },[freeAttempts])\n\n\n        const reset = () => {\n        setRandom(Math.round(Math.random() * 10))\n        setMessage(\"\")\n        setGuess(\"\")\n        setFreeAttempts(3)\n        setIsTrue(false)\n    }\n\n    const clear = () => {\n        localStorage.clear()\n        setPerson(0)\n        setComputer(0)\n    }\n\n    return (\n        <div>\n            <h3>Person:{person}</h3>\n            <h3>Computer:{computer}</h3>\n            <div className=\"game\">\n                <h2>Угадай число от 0 до 10</h2>\n                <input type=\"number\" onChange={handleInput} value={guess}/>\n                <button onClick={checkNumber} disabled={isTrue} className=\"chk-btn\">Check</button>\n                <button className=\"res-btn\" onClick={reset}>Reset</button>\n                <button onClick={clear}>Clear All</button>\n                {\n                    Boolean(freeAttempts) && <div>У вас осталось {freeAttempts} {freeAttempts === 1 ? \"попытка\" : \"попытки\"}</div>\n                }\n                <div>{message}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}